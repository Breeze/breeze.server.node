var expect = require('chai').expect;

var breezeSequelize = require("breeze-sequelize");
// Don't use this
// var breeze = require('breeze-client');
// Use this
var testFns          = require('./testFns.js');
var breeze = testFns.breeze;

var SequelizeManager = breezeSequelize.SequelizeManager;
var SequelizeSaveHandler = breezeSequelize.SequelizeSaveHandler;

describe("SaveHandler", function () {
  
  this.enableTimeouts(false);

  var _ms, _em, _sm;
  
  before(function () {
    _em = testFns.newEm();
    _ms = _em.metadataStore;

    _sm = new SequelizeManager(testFns.dbConfigNw);
    _sm.importMetadata(testFns.getMetadata());
  });


  it("should be able to save a new Customer", function (done) {
    var guid = breeze.core.getUuid();
    var cust = { CustomerID: guid, CompanyName: "NewCo", entityAspect: { 
      entityTypeName: "Customer:#Foo", entityState: "Added" }};
    var request = { body: { entities: [cust], saveOptions: {} }};
    var handler = new SequelizeSaveHandler(_sm, request);

    handler.save().then(r => {
      expect(r.message).to.be.undefined;
      var entities = r.entities;
      expect(entities).to.have.length(1);
      var rcust = entities[0];
      expect(rcust.CustomerID).to.equal(guid);
      expect(rcust.CompanyName).to.equal("NewCo");
    }).then(done, done);
  });

  var custOrderPayload = {"entities":[
    {"OrderID":10351,"CustomerID":"042a91cd-9d3e-4576-8200-e33c3dd8ec82","EmployeeID":1,"OrderDate":"1996-11-11T00:00:00.000Z","RequiredDate":"1996-12-09T00:00:00.000Z","ShippedDate":"1996-11-20T00:00:00.000Z","Freight":162.33,"ShipName":"Ernst Handel","ShipAddress":"Kirchgasse 6","ShipCity":"Graz","ShipRegion":null,"ShipPostalCode":"8010","ShipCountry":"Austria","RowVersion":0,
    "entityAspect":{"entityTypeName":"Order:#Foo","defaultResourceName":"Orders","entityState":"Modified","originalValuesMap":{"CustomerID":"a3246674-7989-415b-93ec-59c1c8dbe320"},"autoGeneratedKey":{"propertyName":"OrderID","autoGeneratedKeyType":"Identity"}}},
    {"CustomerID":"042a91cd-9d3e-4576-8200-e33c3dd8ec82","CustomerID_OLD":null,"CompanyName":"Test_compName","ContactName":null,"ContactTitle":null,"Address":null,"City":null,"Region":null,"PostalCode":null,"Country":null,"Phone":null,"Fax":null,"RowVersion":null,
    "entityAspect":{"entityTypeName":"Customer:#Foo","defaultResourceName":"Customers","entityState":"Added","originalValuesMap":{},"autoGeneratedKey":{"propertyName":"CustomerID","autoGeneratedKeyType":"Identity"}}}],"saveOptions":{}}

  it("should be able to save a new Customer and change an Order", function (done) {
    var request = { body: custOrderPayload };
    var handler = new SequelizeSaveHandler(_sm, request);

    handler.save().then(r => {
      expect(r.message).to.be.undefined;
      var entities = r.entities;
      expect(entities).to.have.length(2);
    }).then(done, done);
  });


});